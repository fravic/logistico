{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { json, Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\n//   import { SessionProvider } from \"./session.context\";\n//   import { SessionMachine } from \"./session.machine\";\n//   import styles from \"./styles.css\";\n\nexport const links = () => [\n// { rel: \"stylesheet\", href: styles },\n{\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\"\n}, {\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\",\n  crossOrigin: \"anonymous\"\n}, {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\"\n}];\nexport async function loader({\n  request,\n  context\n}) {\n  //   const fetchSession = createActorFetch<SessionMachine>({\n  //     actorType: \"session\",\n  //     host: context.env.ACTOR_KIT_HOST,\n  //   });\n\n  //   const accessToken = await createAccessToken({\n  //     signingKey: context.env.ACTOR_KIT_SECRET,\n  //     actorId: context.sessionId,\n  //     actorType: \"session\",\n  //     callerId: context.userId,\n  //     callerType: \"client\",\n  //   });\n  //   const payload = await fetchSession({\n  //     actorId: context.sessionId,\n  //     accessToken,\n  //     input: {\n  //       url: request.url,\n  //     },\n  //   });\n\n  // TODO fetch the session here....\n  return json({\n    sessionId: context.sessionId\n    // accessToken,\n    // payload,\n    // host: context.env.ACTOR_KIT_HOST,\n    // NODE_ENV: context.env.NODE_ENV,\n  });\n}\nexport default function App() {\n  //   const { NODE_ENV, host, sessionId, accessToken, payload } =\n  //     useLoaderData<typeof loader>();\n  //   const isDevelopment = NODE_ENV === \"development\";\n  const isDevelopment = true;\n  return <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <Meta />\n          <Links />\n        </head>\n        <body>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          {isDevelopment && <LiveReload />}\n        </body>\n      </html>;\n}\n_c = App;\n{\n\n  /* <SessionProvider\n  host={host}\n  actorId={sessionId}\n  checksum={payload.checksum}\n  accessToken={accessToken}\n  initialSnapshot={payload.snapshot}\n  >\n  <Outlet />\n  </SessionProvider> */}\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AA6EU;AA5EV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAQO,IAAM,QAAQ,MAAM;AAAA;AAAA,EAE3B;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AAAA,EAAG;AAAA,IACD,KAAK;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,EACf;AAAA,EAAG;AAAA,IACD,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AAAC;AAkCc,SAAR,MAAuB;AAI5B,QAAM,gBAAgB;AACtB,SAAO,mDAAC,UAAK,MAAK,MACZ;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACR,iBAAiB,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJhC;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAZC;AAAA;AAAA;AAAA;AAAA,SAaH;AACN;AACA,KAAK;AACL;AAUuB;AACvB,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
